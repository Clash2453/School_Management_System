// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystem.Data;

#nullable disable

namespace SchoolManagementSystem.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20230409150145_RemoveInheritance")]
    partial class RemoveInheritance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.StudentEvent", b =>
                {
                    b.HasBaseType("SchoolManagementSystem.Models.Event");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentEvents");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.TeacherEvent", b =>
                {
                    b.HasBaseType("SchoolManagementSystem.Models.Event");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherEvents");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.StudentSubject", b =>
                {
                    b.HasBaseType("SchoolManagementSystem.Models.Subject");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.TeacherSubject", b =>
                {
                    b.HasBaseType("SchoolManagementSystem.Models.Subject");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.Admin", "AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Student", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.Student", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.Teacher", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.StudentEvent", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Event", null)
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.IntermediateTables.StudentEvent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Models.Student", null)
                        .WithMany("Events")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.TeacherEvent", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Event", null)
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.IntermediateTables.TeacherEvent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Models.Teacher", null)
                        .WithMany("Events")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.StudentSubject", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Student", null)
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId");

                    b.HasOne("SchoolManagementSystem.Models.Subject", null)
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.IntermediateTables.StudentSubject", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.IntermediateTables.TeacherSubject", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Subject", null)
                        .WithOne()
                        .HasForeignKey("SchoolManagementSystem.Models.IntermediateTables.TeacherSubject", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Models.Teacher", null)
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Student", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
